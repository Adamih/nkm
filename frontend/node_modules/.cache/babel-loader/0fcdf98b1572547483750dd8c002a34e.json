{"ast":null,"code":"import _classCallCheck from \"/home/adam/PycharmProjects/nkm/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/adam/PycharmProjects/nkm/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/adam/PycharmProjects/nkm/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/adam/PycharmProjects/nkm/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/adam/PycharmProjects/nkm/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/adam/PycharmProjects/nkm/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport { PureComponent } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nvar Tile =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Tile, _PureComponent);\n\n  function Tile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Tile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getHeight = function () {\n      return ReactDOM.findDOMNode(_assertThisInitialized(_assertThisInitialized(_this))).offsetHeight;\n    };\n\n    _this.resize = function () {\n      var _this$props = _this.props,\n          isActive = _this$props.isActive,\n          resize = _this$props.resize,\n          position = _this$props.position;\n\n      if (position === \"front\" && isActive || position === \"back\" && !isActive) {\n        resize(_this.getHeight());\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Tile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.resize();\n      ReactDOM.findDOMNode(this).addEventListener(\"DOMSubtreeModified\", this.resize);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.resize();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      ReactDOM.findDOMNode(this).removeEventListener(\"DOMSubtreeModified\", this.resize);\n    }\n  }]);\n\n  return Tile;\n}(PureComponent);\n\nexport { Tile as default };","map":{"version":3,"sources":["/home/adam/PycharmProjects/nkm/src/components/react-flipper/src/components/Tile.jsx"],"names":["PureComponent","ReactDOM","Tile","getHeight","findDOMNode","offsetHeight","resize","props","isActive","position","addEventListener","removeEventListener"],"mappings":";;;;;;AAEA,SAASA,aAAT,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;;IAEqBC,I;;;;;;;;;;;;;;;;;;UAiBnBC,S,GAAY,YAAc;AACxB,aAAOF,QAAQ,CAACG,WAAT,wDAA4BC,YAAnC;AACD,K;;UACDC,M,GAAS,YAAY;AAAA,wBACoB,MAAKC,KADzB;AAAA,UACXC,QADW,eACXA,QADW;AAAA,UACDF,MADC,eACDA,MADC;AAAA,UACOG,QADP,eACOA,QADP;;AAEnB,UACGA,QAAQ,KAAK,OAAb,IAAwBD,QAAzB,IACCC,QAAQ,KAAK,MAAb,IAAuB,CAACD,QAF3B,EAGE;AACAF,QAAAA,MAAM,CAAE,MAAKH,SAAL,EAAF,CAAN;AACD;AACF,K;;;;;;;wCA3B0B;AACzB,WAAKG,MAAL;AACAL,MAAAA,QAAQ,CAACG,WAAT,CAAsB,IAAtB,EAA4BM,gBAA5B,CACE,oBADF,EAEE,KAAKJ,MAFP;AAID;;;yCAC2B;AAC1B,WAAKA,MAAL;AACD;;;2CAC6B;AAC5BL,MAAAA,QAAQ,CAACG,WAAT,CAAsB,IAAtB,EAA4BO,mBAA5B,CACE,oBADF,EAEE,KAAKL,MAFP;AAID;;;;EAhB+BN,a;;SAAbE,I","sourcesContent":["/* @flow */\n\nimport { PureComponent } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nexport default class Tile extends PureComponent<any, any, any> {\n  componentDidMount (): void {\n    this.resize ();\n    ReactDOM.findDOMNode (this).addEventListener (\n      \"DOMSubtreeModified\",\n      this.resize\n    );\n  }\n  componentDidUpdate (): void {\n    this.resize ();\n  }\n  componentWillUnmount (): void {\n    ReactDOM.findDOMNode (this).removeEventListener (\n      \"DOMSubtreeModified\",\n      this.resize\n    );\n  }\n  getHeight = (): number => {\n    return ReactDOM.findDOMNode (this).offsetHeight;\n  };\n  resize = (): void => {\n    const { isActive, resize, position } = this.props;\n    if (\n      (position === \"front\" && isActive) ||\n      (position === \"back\" && !isActive)\n    ) {\n      resize (this.getHeight ());\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}